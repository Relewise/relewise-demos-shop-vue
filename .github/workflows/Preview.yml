name: Deploy to Github Pages  # Defines the name of the GitHub Actions workflow.

on:
    push:
        branches:
            - main  # Triggers the workflow on each push to the 'develop' branch.

jobs:
    build:
      name: Build  # Defines the name of the build job.
      runs-on: ubuntu-latest  # Specifies the operating system for the job.

      steps:
        - name: Checkout Repo  # Checks out the repository.
          uses: actions/checkout@v4

        - name: Create Node Environment  # Sets up Node.js environment.
          uses: actions/setup-node@v4
          with: 
            node-version: 20.x

        - name: Install Packages and Build Application  # Installs npm packages and builds the Vue.js application.
          run: |
            npm ci
            npm run build

        - name: Setup Pages  # Configures pages for deployment.
          id: pages
          uses: actions/configure-pages@v4

        - name: Upload artifact  # Uploads the build artifact.
          uses: actions/upload-pages-artifact@v2
          with:
            path: dist/
      
    deploy:
      runs-on: ubuntu-latest  # Specifies the operating system for the job.
      name: Deploy Application  # Defines the name of the deployment job.

      # Add a dependency to the build job
      needs: build  # Specifies that the deployment job depends on the successful completion of the build job.

      # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
      permissions:
        pages: write      # Grants write permission to deploy to Pages.
        id-token: write   # Grants write permission to verify the deployment source.

      environment:
        name: github-pages  # Specifies the environment for deployment.
        url: ${{ steps.deployment.outputs.page_url }}  # Retrieves the deployment URL from the previous deployment step.
      steps:
        - name: Checkout Repo  # Checks out the repository.
          uses: actions/checkout@v4

        - name: Deploy to Preview Branch
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for authentication
          run: |
            # Configure git with GITHUB_TOKEN for authentication
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"

            # Switch to the preview branch, creating it if it doesn't exist
            git fetch origin
            git switch -C preview

            # Remove existing files except for .git, and copy the build output
            find . -mindepth 1 -not -name '.git' -exec rm -rf {} +
            cp -R path/to/build/output/* .  # Replace with the actual path to your build output

            # Commit and push changes
            git add .
            git commit -m "Deploy Preview"
            git push -f origin preview